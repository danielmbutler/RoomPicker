// Generated by view binder compiler. Do not edit!
package com.dbtechprojects.meetingRoomApp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import com.dbtechprojects.meetingRoomApp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRoomDetailsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ScrollView parent;

  @NonNull
  public final TextView roomCapacity;

  @NonNull
  public final LinearLayout roomDetailLl;

  @NonNull
  public final ProgressBar roomDetailProgressBar;

  @NonNull
  public final RelativeLayout roomDetailRl;

  @NonNull
  public final LinearLayout roomFacilitiesImageLl;

  @NonNull
  public final LinearLayout roomFacilitiesLl;

  @NonNull
  public final TextView roomFacilitiesTv;

  @NonNull
  public final LinearLayout roomFeaturesLl;

  @NonNull
  public final TextView roomFeaturesTv;

  @NonNull
  public final ImageView roomImage;

  @NonNull
  public final TextView roomLocation;

  @NonNull
  public final LinearLayout roomLocationLl;

  @NonNull
  public final LinearLayout roomServicesLl;

  @NonNull
  public final TextView roomServicesTv;

  @NonNull
  public final TextView roomTitle;

  @NonNull
  public final Toolbar toolbar;

  private ActivityRoomDetailsBinding(@NonNull ScrollView rootView, @NonNull ScrollView parent,
      @NonNull TextView roomCapacity, @NonNull LinearLayout roomDetailLl,
      @NonNull ProgressBar roomDetailProgressBar, @NonNull RelativeLayout roomDetailRl,
      @NonNull LinearLayout roomFacilitiesImageLl, @NonNull LinearLayout roomFacilitiesLl,
      @NonNull TextView roomFacilitiesTv, @NonNull LinearLayout roomFeaturesLl,
      @NonNull TextView roomFeaturesTv, @NonNull ImageView roomImage,
      @NonNull TextView roomLocation, @NonNull LinearLayout roomLocationLl,
      @NonNull LinearLayout roomServicesLl, @NonNull TextView roomServicesTv,
      @NonNull TextView roomTitle, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.parent = parent;
    this.roomCapacity = roomCapacity;
    this.roomDetailLl = roomDetailLl;
    this.roomDetailProgressBar = roomDetailProgressBar;
    this.roomDetailRl = roomDetailRl;
    this.roomFacilitiesImageLl = roomFacilitiesImageLl;
    this.roomFacilitiesLl = roomFacilitiesLl;
    this.roomFacilitiesTv = roomFacilitiesTv;
    this.roomFeaturesLl = roomFeaturesLl;
    this.roomFeaturesTv = roomFeaturesTv;
    this.roomImage = roomImage;
    this.roomLocation = roomLocation;
    this.roomLocationLl = roomLocationLl;
    this.roomServicesLl = roomServicesLl;
    this.roomServicesTv = roomServicesTv;
    this.roomTitle = roomTitle;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRoomDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRoomDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_room_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRoomDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ScrollView parent = (ScrollView) rootView;

      id = R.id.room_capacity;
      TextView roomCapacity = rootView.findViewById(id);
      if (roomCapacity == null) {
        break missingId;
      }

      id = R.id.room_detail_ll;
      LinearLayout roomDetailLl = rootView.findViewById(id);
      if (roomDetailLl == null) {
        break missingId;
      }

      id = R.id.room_detail_progressBar;
      ProgressBar roomDetailProgressBar = rootView.findViewById(id);
      if (roomDetailProgressBar == null) {
        break missingId;
      }

      id = R.id.room_detail_rl;
      RelativeLayout roomDetailRl = rootView.findViewById(id);
      if (roomDetailRl == null) {
        break missingId;
      }

      id = R.id.room_facilities_image_ll;
      LinearLayout roomFacilitiesImageLl = rootView.findViewById(id);
      if (roomFacilitiesImageLl == null) {
        break missingId;
      }

      id = R.id.room_facilities_ll;
      LinearLayout roomFacilitiesLl = rootView.findViewById(id);
      if (roomFacilitiesLl == null) {
        break missingId;
      }

      id = R.id.room_facilities_tv;
      TextView roomFacilitiesTv = rootView.findViewById(id);
      if (roomFacilitiesTv == null) {
        break missingId;
      }

      id = R.id.room_features_ll;
      LinearLayout roomFeaturesLl = rootView.findViewById(id);
      if (roomFeaturesLl == null) {
        break missingId;
      }

      id = R.id.room_features_tv;
      TextView roomFeaturesTv = rootView.findViewById(id);
      if (roomFeaturesTv == null) {
        break missingId;
      }

      id = R.id.room_image;
      ImageView roomImage = rootView.findViewById(id);
      if (roomImage == null) {
        break missingId;
      }

      id = R.id.room_location;
      TextView roomLocation = rootView.findViewById(id);
      if (roomLocation == null) {
        break missingId;
      }

      id = R.id.room_location_ll;
      LinearLayout roomLocationLl = rootView.findViewById(id);
      if (roomLocationLl == null) {
        break missingId;
      }

      id = R.id.room_services_ll;
      LinearLayout roomServicesLl = rootView.findViewById(id);
      if (roomServicesLl == null) {
        break missingId;
      }

      id = R.id.room_services_tv;
      TextView roomServicesTv = rootView.findViewById(id);
      if (roomServicesTv == null) {
        break missingId;
      }

      id = R.id.room_title;
      TextView roomTitle = rootView.findViewById(id);
      if (roomTitle == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityRoomDetailsBinding((ScrollView) rootView, parent, roomCapacity,
          roomDetailLl, roomDetailProgressBar, roomDetailRl, roomFacilitiesImageLl,
          roomFacilitiesLl, roomFacilitiesTv, roomFeaturesLl, roomFeaturesTv, roomImage,
          roomLocation, roomLocationLl, roomServicesLl, roomServicesTv, roomTitle, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
