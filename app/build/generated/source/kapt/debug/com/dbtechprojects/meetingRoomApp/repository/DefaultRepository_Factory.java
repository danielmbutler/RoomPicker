// Generated by Dagger (https://dagger.dev).
package com.dbtechprojects.meetingRoomApp.repository;

import com.dbtechprojects.meetingRoomApp.data.RoomApi;
import com.dbtechprojects.meetingRoomApp.database.RoomDAO;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DefaultRepository_Factory implements Factory<DefaultRepository> {
  private final Provider<RoomApi> apiProvider;

  private final Provider<RoomDAO> roomDaoProvider;

  public DefaultRepository_Factory(Provider<RoomApi> apiProvider,
      Provider<RoomDAO> roomDaoProvider) {
    this.apiProvider = apiProvider;
    this.roomDaoProvider = roomDaoProvider;
  }

  @Override
  public DefaultRepository get() {
    return newInstance(apiProvider.get(), roomDaoProvider.get());
  }

  public static DefaultRepository_Factory create(Provider<RoomApi> apiProvider,
      Provider<RoomDAO> roomDaoProvider) {
    return new DefaultRepository_Factory(apiProvider, roomDaoProvider);
  }

  public static DefaultRepository newInstance(RoomApi api, RoomDAO roomDao) {
    return new DefaultRepository(api, roomDao);
  }
}
